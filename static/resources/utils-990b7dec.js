const e=async(e,a,t,d="name")=>await fetch("/update/macro",{method:"POST",body:JSON.stringify({update:e,value:a,where:d,where_value:t})}),a=async(e,a,t,d="name",o,n)=>await fetch("/update/commands",{method:"POST",body:JSON.stringify({update:e,value:a,where:d,where_value:t,and_where:o,and_equals:n})}),t=async(e,a,t)=>await fetch("/move_comm",{method:"POST",body:JSON.stringify({macro_name:e,new_id:a,old_id:t})}),d=async e=>await fetch("/regioncheck",{method:"POST",body:JSON.stringify({image_to_locate:e})}),o=async(e,a="name")=>await fetch("/delete",{method:"POST",body:JSON.stringify({where:a,where_value:e})}),n=(e,a,t)=>{(async a=>{await fetch("/delete/command",{method:"POST",body:JSON.stringify({name_var:e,command_id_var:a})})})(a);let d=[];return t.forEach(((e,t)=>{t>a?(e[0]=e[0]-1,d=[...d,e]):t!=a&&(d=[...d,e])})),d},s=async(e,a,t)=>await fetch("/add_function",{method:"POST",body:JSON.stringify({macro_name:e,comm_type:a,comm_value:t})}),i=async()=>await fetch("/word_listeners/add",{method:"POST",body:"none"}),c=async e=>await fetch("/word_listeners/delete",{method:"POST",body:JSON.stringify({listen_for_string:e})}),r=async(e,a,t,d)=>await fetch("/word_listeners/update",{method:"POST",body:JSON.stringify({column_to_update:e,update_to_value:a,where:t,where_equals:d})});export{a,s as b,n as c,o as d,r as e,c as f,i as g,d as l,t as m,e as u};
//# sourceMappingURL=utils-990b7dec.js.map
