{"version":3,"file":"getRegion-15d6b231.js","sources":["../../../src/pages/getRegion.svelte"],"sourcesContent":["<script>\n    import Fa from 'svelte-fa';\n    import { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n    export let extraData;\n    console.log(extraData);\n    // let listeners = extraData['listeners']\n\timport Header from './components/header.svelte';\n\timport TextArea from './components/textArea.svelte';\n    import { add_listener, delete_listener, update_listener, locate_image } from './utils.js';\n    import { clickOutside } from '../utils/clickOutside';\n\n    let paste_box_clicked = false;\n    let img_src = '';\n    let left = '_';\n    let top = '_';\n    let width = '_';\n    let height = '_';\n\n    const paste_function = event => {\n        if (paste_box_clicked){\n            var items = (event.clipboardData || event.originalEvent.clipboardData).items;\n            console.log(JSON.stringify(items)); // might give you mime types\n            for (var index in items) {\n                var item = items[index];\n                if (item.kind === 'file') {\n                    var blob = item.getAsFile();\n                    var reader = new FileReader();\n                    reader.onload = function (event) {\n                        // console.log('1d', event.target.result); // data url!\n                        locate_image(event.target.result).then(r => {\n                            if (r.ok) {\n                                r.json().then(j => {\n                                    console.log(j.return_msg);\n                                    if (j.return_msg) {\n                                        let return_msg = j.return_msg;\n                                        left = return_msg[0];\n                                        top = return_msg[1];\n                                        width = return_msg[2];\n                                        height = return_msg[3];\n\n                                    }\n                                })\n                            }\n                        })\n                        img_src = event.target.result;\n                    }; \n                    // reader.readAsDataURL(blob);\n                    reader.readAsDataURL(blob);\n                }\n            }\n        }\n        paste_box_clicked = false;\n    }\n\n    const click_paste_box = () => {\n        paste_box_clicked = true;\n    };\n    const click_outside_paste_box = () => {\n        paste_box_clicked = false;\n    };\n</script>\n\n<main class=\"index\">\n    <Header user_info={extraData['current_user']} />\n    <h1 class=\"region_title space-around\">Region Check</h1>\n    <div class=\"flex-center\">\n        <h1 class=\"region_title space-around\">left, top, width, height - {left}, {top}, {width}, {height}</h1>\n    </div>\n    <div class=\"paste_area flex-center\">\n        <span class=\"paste_box\" on:click={click_paste_box} use:clickOutside on:click_outside={click_outside_paste_box} on:paste={paste_function}\n                role=\"presentation\" class:padding1={paste_box_clicked}>\n            {#if paste_box_clicked}\n                <span class=\"clicked_box\"></span>\n            {:else}\n                <span class=\"paste_box__text flex-center\">\n                    {#if img_src == ''}\n                        Paste Here\n                    {:else}\n                        <img src={img_src} alt=\"clipboard pasted\">\n                    {/if}\n                </span>\n            {/if}\n        </span>\n    </div>\n</main>\n\n<style lang=\"scss\">\n    .paste_box__text img {\n        border: 1px solid;\n        padding: 2rem;\n    }\n    .paste_box {\n        border: solid;\n        display: inline-block;\n        font-size: 2rem;\n        position: relative;\n        width: calc(100% - 8rem);\n        height: calc(100% - 8rem);\n    }\n    .clicked_box {\n        border: dotted;\n        padding: 0.3rem;\n        padding-inline-start: 3rem;\n        width: calc(100% - 4rem);\n        height: calc(100% - 1rem);\n        display: inline-block;\n    }\n    .region_title {\n        background: brown;\n        /* color: yellow; */\n        width: 80vw;\n        margin: 0 auto;\n    }\n    .paste_area {\n        background: brown;\n        max-width: 80vw;\n        margin: 0 auto;\n        height: 80vh;\n    }\n</style>"],"names":["ctx","create_if_block_1","insert","target","span","anchor","attr","img","img_src_value","create_if_block","user_info","main","append","h10","div0","h11","div1","dirty","header_changes","extraData","$$props","console","log","paste_box_clicked","img_src","left","top","width","height","event","items","clipboardData","originalEvent","index","JSON","stringify","item","kind","blob","getAsFile","reader","FileReader","onload","locate_image","result","then","r","ok","json","j","return_msg","$$invalidate","readAsDataURL"],"mappings":"oVA4EyB,MAAW,IAAXA,KAAaC,oHADtBC,EAMMC,EAAAC,EAAAC,yMARNH,EAAgCC,EAAAC,EAAAC,6EAMdL,EAAO,KAAAM,EAAAC,EAAA,MAAAC,sEAAjBN,EAAyCC,EAAAI,EAAAF,2BAA/BL,EAAO,qEAHH,sIAJrBA,EAAiB,GAAAS,oBARXC,UAAAV,KAAwB,sJAGD,mCAA4BA,EAAI,QAAC,UAAGA,EAAG,QAAC,UAAGA,EAAK,QAAC,UAAGA,EAAM,iQAIpDA,EAAiB,qFARrEE,EAsBMC,EAAAQ,EAAAN,sBApBFO,EAAsDD,EAAAE,UACtDD,EAEKD,EAAAG,GADDF,EAAqGE,EAAAC,kEAEzGH,EAeKD,EAAAK,GAdDJ,EAaMI,EAAAZ,uCAb4BJ,EAAe,0CAAqCA,EAAuB,gBAAYA,EAAc,gCANxH,EAAAiB,IAAAC,EAAAR,UAAAV,KAAwB,uCAG2BA,EAAI,oBAAIA,EAAG,oBAAIA,EAAK,oBAAIA,EAAM,8FAIpDA,EAAiB,0IAnEtDmB,GAASC,EACpBC,QAAQC,IAAIH,GAOR,IAAAI,GAAoB,EACpBC,EAAU,GACVC,EAAO,IACPC,EAAM,IACNC,EAAQ,IACRC,EAAS,2EAEUC,OACfN,EAAiB,KACbO,GAASD,EAAME,eAAiBF,EAAMG,cAAcD,eAAeD,MAE9D,IAAA,IAAAG,KADTZ,QAAQC,IAAIY,KAAKC,UAAUL,IACTA,EAAK,KACfM,EAAON,EAAMG,MACC,SAAdG,EAAKC,KAAe,KAChBC,EAAOF,EAAKG,YACZC,MAAaC,WACjBD,EAAOE,OAAM,SAAab,GAEtBc,EAAad,EAAM1B,OAAOyC,QAAQC,MAAKC,IAC/BA,EAAEC,IACFD,EAAEE,OAAOH,MAAKI,IAEN,GADJ5B,QAAQC,IAAI2B,EAAEC,YACVD,EAAEC,WAAU,KACRA,EAAaD,EAAEC,eACnBzB,EAAOyB,EAAW,QAClBxB,EAAMwB,EAAW,QACjBvB,EAAQuB,EAAW,QACnBtB,EAASsB,EAAW,WAMpCC,EAAA,EAAA3B,EAAUK,EAAM1B,OAAOyC,SAG3BJ,EAAOY,cAAcd,KAIjCa,EAAA,EAAA5B,GAAoB,EAAK,EAGR,KACjB4B,EAAA,EAAA5B,GAAoB,EAAI,EAEC,KACzB4B,EAAA,EAAA5B,GAAoB,EAAK"}